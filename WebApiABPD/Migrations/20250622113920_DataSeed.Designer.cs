// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiABPD.Data;

#nullable disable

namespace WebApiABPD.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250622113920_DataSeed")]
    partial class DataSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApiABPD.Models.Partia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataZalozenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Skrot")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Partia");

                    b.HasData(
                        new
                        {
                            Id = 99,
                            DataZalozenia = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nazwa = "Partia Przykladowa",
                            Skrot = "PP"
                        });
                });

            modelBuilder.Entity("WebApiABPD.Models.Polityk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Powiedzenie")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Polityk");

                    b.HasData(
                        new
                        {
                            Id = 99,
                            Imie = "Jan",
                            Nazwisko = "Kowalski",
                            Powiedzenie = "Obywatelu, spokojnie!"
                        });
                });

            modelBuilder.Entity("WebApiABPD.Models.Przynaleznosc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Do")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Od")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartiaId")
                        .HasColumnType("int")
                        .HasColumnName("Partia_ID");

                    b.Property<int>("PolitykId")
                        .HasColumnType("int")
                        .HasColumnName("Polityk_ID");

                    b.HasKey("Id");

                    b.HasIndex("PartiaId");

                    b.HasIndex("PolitykId");

                    b.ToTable("Przynaleznosc");

                    b.HasData(
                        new
                        {
                            Id = 99,
                            Od = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartiaId = 99,
                            PolitykId = 99
                        });
                });

            modelBuilder.Entity("WebApiABPD.Models.Przynaleznosc", b =>
                {
                    b.HasOne("WebApiABPD.Models.Partia", "Partia")
                        .WithMany("Przynaleznosci")
                        .HasForeignKey("PartiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiABPD.Models.Polityk", "Polityk")
                        .WithMany("Przynaleznosci")
                        .HasForeignKey("PolitykId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partia");

                    b.Navigation("Polityk");
                });

            modelBuilder.Entity("WebApiABPD.Models.Partia", b =>
                {
                    b.Navigation("Przynaleznosci");
                });

            modelBuilder.Entity("WebApiABPD.Models.Polityk", b =>
                {
                    b.Navigation("Przynaleznosci");
                });
#pragma warning restore 612, 618
        }
    }
}
